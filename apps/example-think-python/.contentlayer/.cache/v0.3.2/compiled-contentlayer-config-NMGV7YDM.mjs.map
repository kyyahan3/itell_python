{
  "version": 3,
  "sources": ["../../../src/lib/location.ts", "../../../contentlayer.config.ts"],
  "sourcesContent": ["import { Location } from \"@/types/location\";\n\nexport const parseLocation = (\n\tx: string,\n\tdefaultVal: number | undefined = undefined,\n) => (x ? parseInt(x.split(\"-\")[1]) : defaultVal);\n\nexport const getLocationFromFlattenedPath = (\n\tpath: string,\n): Partial<Location> => {\n\tconst slugSplit = path.substring(1).split(\"/\");\n\tconst [chapter, section] = slugSplit;\n\treturn {\n\t\tchapter: parseLocation(chapter),\n\t};\n};\n", "import { getLocationFromFlattenedPath } from \"./src/lib/location\";\nimport { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeKatex from \"rehype-katex\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkMath from \"remark-math\";\nimport rehypePrism from \"rehype-prism-plus\";\nimport GithubSlugger from \"github-slugger\";\n\nconst Section = defineDocumentType(() => ({\n\tname: \"Chapter\",\n\tfilePathPattern: \"**/*.{md,mdx}\",\n\tcontentType: \"mdx\",\n\n\tfields: {\n\t\ttitle: {\n\t\t\ttype: \"string\",\n\t\t\tdescription: \"The title of the Section\",\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputedFields: {\n\t\turl: {\n\t\t\ttype: \"string\",\n\t\t\tresolve: (doc) => `${doc._raw.flattenedPath}`,\n\t\t},\n\t\tlocation: {\n\t\t\ttype: \"json\",\n\t\t\tresolve: (doc) => getLocationFromFlattenedPath(doc._raw.flattenedPath),\n\t\t},\n\t\theadings: {\n\t\t\ttype: \"json\",\n\t\t\tresolve: async (doc) => {\n\t\t\t\tconst regXHeader = /(?<!`|\\w+)\\n(?<flag>#{2,6})\\s+(?<content>.+)/g;\n\t\t\t\tconst slugger = new GithubSlugger();\n\t\t\t\tconst headings = Array.from(doc.body.raw.matchAll(regXHeader)).map(\n\t\t\t\t\t({ groups }) => {\n\t\t\t\t\t\tconst flag = groups?.flag;\n\t\t\t\t\t\tconst content = groups?.content;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tlevel:\n\t\t\t\t\t\t\t\tflag?.length === 1\n\t\t\t\t\t\t\t\t\t? \"one\"\n\t\t\t\t\t\t\t\t\t: flag?.length === 2\n\t\t\t\t\t\t\t\t\t? \"two\"\n\t\t\t\t\t\t\t\t\t: \"three\",\n\t\t\t\t\t\t\ttext: content,\n\t\t\t\t\t\t\tslug: content ? slugger.slug(content) : undefined,\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t\treturn headings;\n\t\t\t},\n\t\t},\n\t},\n}));\n\nexport default makeSource({\n\tcontentDirPath: \"content\",\n\tdocumentTypes: [Section],\n\tmdx: {\n\t\tremarkPlugins: [remarkGfm, remarkMath],\n\t\trehypePlugins: [\n\t\t\trehypeSlug,\n\t\t\trehypeAutolinkHeadings,\n\t\t\trehypeKatex,\n\t\t\trehypePrism,\n\t\t],\n\t},\n\tdisableImportAliasWarning: true,\n});\n"],
  "mappings": ";AAEO,IAAM,gBAAgB,CAC5B,GACA,aAAiC,WAC5B,IAAI,SAAS,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,IAAI;AAE/B,IAAM,+BAA+B,CAC3C,SACuB;AACvB,QAAM,YAAY,KAAK,UAAU,CAAC,EAAE,MAAM,GAAG;AAC7C,QAAM,CAAC,SAAS,OAAO,IAAI;AAC3B,SAAO;AAAA,IACN,SAAS,cAAc,OAAO;AAAA,EAC/B;AACD;;;ACdA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,iBAAiB;AACxB,OAAO,gBAAgB;AACvB,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,OAAO,iBAAiB;AACxB,OAAO,mBAAmB;AAE1B,IAAM,UAAU,mBAAmB,OAAO;AAAA,EACzC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EAEb,QAAQ;AAAA,IACP,OAAO;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACX;AAAA,EACD;AAAA,EACA,gBAAgB;AAAA,IACf,KAAK;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,GAAG,IAAI,KAAK;AAAA,IAC/B;AAAA,IACA,UAAU;AAAA,MACT,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,6BAA6B,IAAI,KAAK,aAAa;AAAA,IACtE;AAAA,IACA,UAAU;AAAA,MACT,MAAM;AAAA,MACN,SAAS,OAAO,QAAQ;AACvB,cAAM,aAAa;AACnB,cAAM,UAAU,IAAI,cAAc;AAClC,cAAM,WAAW,MAAM,KAAK,IAAI,KAAK,IAAI,SAAS,UAAU,CAAC,EAAE;AAAA,UAC9D,CAAC,EAAE,OAAO,MAAM;AACf,kBAAM,OAAO,QAAQ;AACrB,kBAAM,UAAU,QAAQ;AACxB,mBAAO;AAAA,cACN,OACC,MAAM,WAAW,IACd,QACA,MAAM,WAAW,IACjB,QACA;AAAA,cACJ,MAAM;AAAA,cACN,MAAM,UAAU,QAAQ,KAAK,OAAO,IAAI;AAAA,YACzC;AAAA,UACD;AAAA,QACD;AACA,eAAO;AAAA,MACR;AAAA,IACD;AAAA,EACD;AACD,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACzB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO;AAAA,EACvB,KAAK;AAAA,IACJ,eAAe,CAAC,WAAW,UAAU;AAAA,IACrC,eAAe;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,EACD;AAAA,EACA,2BAA2B;AAC5B,CAAC;",
  "names": []
}
